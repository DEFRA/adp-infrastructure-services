parameters:
  - name: deployFromFeature
    type: boolean
    default: false
  - name: environments
    type: object
    default: []
  - name: program
    type: string
  - name: service
    type: string
  - name: ingressType
    type: string
  - name: resource
    type: string
  - name: includePlatformEnvs
    type: boolean
    default: false
  - name: includeServiceVariableFiles
    type: string
  
resources:
  repositories:
    - repository: ADPPipelineCommon
      name: DEFRA/adp-pipeline-common
      endpoint: DEFRA-ADP
      type: github
      ref: refs/tags/1.0.0-latest

extends:
  template: /pipelines/common-infra-deploy.yaml@ADPPipelineCommon
  parameters:
    projectName: $(projectName)
    deployFromFeature: ${{ parameters.deployFromFeature }}
    filePathsForTransform: |
      **/infra/services/${{ parameters.program }}/${{ parameters.service }}/app-registration.json
      **/infra/services/${{ parameters.program }}/${{ parameters.service }}/aad-group.json
      **/*${{ parameters.resource }}.main.bicep
    includePlatformEnvs: ${{ parameters.includePlatformEnvs }}
    variableFiles: 
      - /pipelines/vars/common.yaml@_self
      - /pipelines/vars/env/{environment}.yaml@_self
      - /pipelines/vars/tenant/azure-ip-ranges.yaml@_self
      - ${{ if or(eq(parameters.includeServiceVariableFiles, 'Both'),eq(parameters.includeServiceVariableFiles, 'Environment')) }}:
        - /infra/services/${{ parameters.program }}/${{ parameters.service }}/env-vars/{environment}.yaml@self
      - ${{ if or(eq(parameters.includeServiceVariableFiles, 'Both'),eq(parameters.includeServiceVariableFiles, 'Common')) }}:
        - /infra/services/${{ parameters.program }}/${{ parameters.service }}/env-vars/common.yaml@self
    groupedDeployments:
    - ${{ if eq(parameters.resource, 'application-registration') }}:
      - name: app_reg
        deployments:
          - name: Register App
            type: 'script'
            scriptType: AzurePowerShell
            scriptRepo: PipelineCommonScripts
            serviceConnectionVariableName: subscriptionName
            resourceGroup: $(servicesResourceGroup)
            path: "PowerShellLibrary/Add-AdAppRegistrations.ps1"
            scriptArguments: >
                -AppRegJsonPath '$(Pipeline.Workspace)/s/self/infra/services/${{ parameters.program }}/${{ parameters.service }}/app-registration.json'
          - name: Set RBAC Permissions
            type: 'script'
            scriptType: AzurePowerShell
            serviceConnectionVariableName: subscriptionName
            resourceGroup: $(servicesResourceGroup)
            path: "infra/scripts/Set-KVSecret-RBAC.ps1"
            scriptArguments: >
              -ServiceName '${{ parameters.service }}'
              -KeyvaultName '$(infraResourceNamePrefix)$(nc_resource_keyvault)$(nc_instance_regionid)01'
              -MIPrefix '$(infraResourceNamePrefix)$(nc_resource_managedidentity)$(nc_instance_regionid)01'
    - ${{ if eq(parameters.resource, 'application-access-group') }}:
      - name: app_access_group
        deployments:
          - name: Create Group
            type: 'script'
            scriptType: AzurePowerShell
            scriptRepo: PipelineCommonScripts
            serviceConnectionVariableName: ssvServiceConnection            
            path: "PowerShellLibrary/Create-AADGroups.ps1"
            scriptArguments: >
                -AADGroupsJsonManifestPath '$(Pipeline.Workspace)/s/self/infra/services/${{ parameters.program }}/${{ parameters.service }}/aad-group.json'
    - ${{ if eq(parameters.resource, 'alerts') }}:
      - name: alerts
        deployments:
          - name: action-groups.main
            path: infra/bicep-generic/monitoring
            parameterFilePath: infra/services/${{ parameters.program }}/${{ parameters.service }}
            resourceGroupName: $(servicesResourceGroup)
    - ${{ if eq(parameters.resource, 'application-domain') }}:
      - name: application_domain
        deployments:
          - name: application-domain.main
            path: infra/bicep-generic/cdn
            parameterFilePath: infra/services/${{ parameters.program }}/${{ parameters.service }}
            resourceGroupName: $(cdnResourceGroup)

            ${{ if eq(parameters.service, 'portal') }}:
              preDeployScriptsList:
                - displayName: Get App Gateway Public IP
                  scriptPath: infra/scripts/Get-AppGatewayFrontendPublicIP.ps1
                  serviceConnectionVariableName: secServiceConnection
                  type: AzurePowerShell
                  scriptArguments: >
                    -ResourceGroupName  $(secInfraResourceGroup)
                    -AppGatewayName $(secApplicationGatewayName)

            postDeployScriptsList:
              - displayName: 'Determine WAF Ingress Type'
                type: PowerShell
                inlineScript: |
                  $output = '$(azureDeploymentOutputs)' | ConvertFrom-Json
                  Write-Host "##vso[task.setvariable variable=wafName;]$($output.wafName.value)"
                  Write-Host "##vso[task.setvariable variable=appEndpointName;]$($output.appEndpointName.value)"

              - displayName: Set AFD Security Policy
                scriptPath: infra/scripts/Set-AFDSecurityPolicy.ps1
                scriptArguments: >
                  -AfdName '$(cdnProfileName)'
                  -PolicyName '${{ parameters.ingressType }}'
                  -WafPolicyName '$(wafName)'
                  -CustomDomainName '$(appEndpointName)'
                  -ResourceGroupName '$(cdnResourceGroup)'
                  -SubscriptionId '$(subscriptionId)'
    - ${{ if eq(parameters.resource, 'service-mi-rbac') }}:
      - name: service_mi_rbac
        deployments:
          - name: Service MI RBAC
            type: 'script'
            scriptType: AzurePowerShell
            serviceConnectionVariableName: ssvServiceConnection
            path: "infra/scripts/Add-MI-To-EntraGroup.ps1"
            scriptArguments: >
              -GroupMIList '$(accessGroupMiList)'
              -MIPrefix '$(infraResourceNamePrefix)$(nc_resource_managedidentity)$(nc_instance_regionid)01'
    ${{ if gt(length(parameters.environments), 0) }}:
      environments:
        - ${{ parameters.environments }}
