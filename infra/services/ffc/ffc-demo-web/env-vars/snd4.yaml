variables:
  appEndpoint: 'ffc-demo-web'
  dnsZoneName: '$(publicDnsZoneName)'
  createActionGroups: true

  actionGroups: >
    {
      test: {
        name: 'test1'
        groupShortName: 'test1'
        emailReceivers: [
          {
            emailAddress: 'test.user@testcompany.com'
            name: 'Test1User_-EmailAction-'
            useCommonAlertSchema: 'true'
          }
        ]
      }
      contScan: {
        name: 'container-scan'
        groupShortName: 'cont-scan'
        emailReceivers: [
          {
            emailAddress: 'mathew.lambeth@equalexperts.com'
            name: 'matl_-EmailAction-'
            useCommonAlertSchema: 'true'
          }
        ]
      }
    }
  createLogAlerts: true

  logAlerts: >
    {
      test: {
        name: 'test1'
        location: 'UK South'
        criterias: {
          allOf: [
            {
              dimensions: [
                {
                  name: 'Computer'
                  operator: 'Include'
                  values: [
                    '*'
                  ]
                }
                {
                  name: 'InstanceName'
                  operator: 'Include'
                  values: [
                    '*'
                  ]
                }
              ]
              metricMeasureColumn: 'AggregatedValue'
              operator: 'GreaterThan'
              query: 'Perf | where ObjectName == \'LogicalDisk\' | where CounterName == \'% Free Space\' | where InstanceName <> \'HarddiskVolume1\' and InstanceName <> \'_Total\' | summarize AggregatedValue = min(CounterValue) by Computer, InstanceName, bin(TimeGenerated,5m)'
              threshold: 0
              timeAggregation: 'Average'
            }
          ]
        }
        logAnalyticsWorkspaceResourceId: '/subscriptions/da83801b-f7e0-4510-9848-67d87b1009e2/resourceGroups/SNDADPINFRG4401/providers/Microsoft.OperationalInsights/workspaces/SNDADPINFLW4401'
        actionGroup: '/subscriptions/da83801b-f7e0-4510-9848-67d87b1009e2/resourceGroups/SNDADPINFRG4401/providers/Microsoft.Insights/actiongroups/ffc-demo-web-test1'
      }
      contScan: {
        name: 'container-scan'
        description: 'See <a href=\'https://portal.azure.com/#@Defra.onmicrosoft.com/resource/subscriptions/19164a52-70b4-46bf-be9b-0cb3edd7c120/resourceGroups/DEVADPINFRG1401/providers/Microsoft.OperationalInsights/workspaces/DEVADPINFLW1401/logs\'>Defects triggering this rule here</a>'
        location: 'UK South'
        criterias: {
          allOf: [
            {
              dimensions: []
              metricMeasureColumn: 'RecommendationCount'
              operator: 'GreaterThan'
              query: 'SecurityNestedRecommendation\n| where RecommendationSeverity in (\'High\')\n| extend parsed_data = parse_json(ResourceDetails)\n| extend parsed_additional_data = parse_json(AdditionalData)\n| extend imageId = tostring(parsed_data.id)\n| extend assessedResourceType = tostring(parsed_additional_data.assessedResourceType)\n| project-away parsed_data, parsed_additional_data\n| where assessedResourceType !in (\'ManagedAggregatedServerVulnerabilityTvm\',\'AzureContainerRegistryVulnerability\') // Remove the managed infrastructure defects. Focus on running containers only.\n| summarize \n    RecommendationsList = make_list(RecommendationName), \n    RecommendationSeverity = any(RecommendationSeverity)  // Retain one of the RecommendationSeverity values for each AssessedResourceId\n    by AssessedResourceId\n| extend RecommendationsListStr = strcat_array(RecommendationsList, \',\')  // Convert the list to a comma-separated string\n| extend RecommendationCount = array_length(RecommendationsList)  // Count the number of recommendations\n| extend ImageName = substring(AssessedResourceId, indexof(AssessedResourceId, \'image/\') + 6, indexof(AssessedResourceId, \'@\') - indexof(AssessedResourceId, \'image/\') - 6)\n| project ImageName, RecommendationSeverity, RecommendationsListStr, RecommendationCount, AssessedResourceId\n| where ImageName contains \'demo\''
              threshold: 2
              timeAggregation: 'Total'
            }
          ]
        }
        logAnalyticsWorkspaceResourceId: '/subscriptions/da83801b-f7e0-4510-9848-67d87b1009e2/resourceGroups/SNDADPINFRG4401/providers/Microsoft.OperationalInsights/workspaces/SNDADPINFLW4401'
        actionGroup: '/subscriptions/da83801b-f7e0-4510-9848-67d87b1009e2/resourceGroups/SNDADPINFRG4401/providers/Microsoft.Insights/actiongroups/ffc-demo-web-container-scan'
      }
      
    }